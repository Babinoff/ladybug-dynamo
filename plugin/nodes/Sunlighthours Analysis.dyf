<Workspace Version="1.2.0.2690" X="414.299809898796" Y="363.716431822727" zoom="0.87323933894952" Name="Sunlighthours Analysis" Description="Calculate sunlight hours for a list of test points" ID="09d9f5ab-9afb-4e14-b9ec-812e8306f601" Category="Ladybug.3 :: Environmental Analysis">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonStringNode guid="347dce98-66dd-4fc8-92e7-cd8751c99829" type="PythonNodeModels.PythonStringNode" nickname="Python Script From String" x="492.337566617498" y="-12.2806003249328" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="4">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="4e5e9c4c-c3ab-4727-824a-80d230637a6f" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-388.465655293277" y="13.1105137021172" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Test points. You can use several methods including using Generate Test Points to generate test points.&#xD;&#xA;_testPoints: var[]..[];" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="001199b2-6808-478f-ae43-adeb2dfeddf4" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-392.863482875656" y="136.508124587459" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//All the context geometries as surfaces&#xD;&#xA;_geometries: var[]..[];" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="d6119c54-5a23-4ebd-beab-b556e62c4d56" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-390.482682473275" y="224.249196413875" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//List of sun vectors from sunpath component&#xD;&#xA;_sunVectors" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="f362ebd4-4806-405c-b0e0-c9aed4a8a71e" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="754.389800405733" y="-13.2703547486341" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="/*&#xD;&#xA;Number of sunlight hours for each test point&#xD;&#xA;Use this values to color the surface.&#xD;&#xA;*/&#xD;&#xA;sunlightHours" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="134c93e3-1c7e-4975-8f33-66227f47b17d" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="851.171406136566" y="-159.465611353758" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="//Report&#xD;&#xA;ERRReport" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="38665a06-ebfb-4bad-9728-4ab0f5fe8051" type="PythonNodeModels.PythonNode" nickname="Error Report!" x="689.271049738329" y="-159.465611353758" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>"""Report errors"""
importErr = IN[0]
runErr = IN[1]
errors = []

if importErr and str(importErr).startswith("ERROR:"):
	errors.append(importErr)

if runErr and str(runErr).startswith("ERROR:"):
	errors.append(runErr)

if len(errors)==0:
	OUT = "All good! Vvizzzz."
else:
	OUT = "\n".join(errors)</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="a3d3c45e-daaf-4a73-91b4-7f8a3dcff1b3" type="PythonNodeModels.PythonNode" nickname="import and prepare py code" x="35.1133084417223" y="-159.835739852724" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>"""Find packages from Dynamo folder and prepare the code."""
import clr
from System import AppDomain, Environment, IO

def tryGetPluginPath(plugin):
    """Try to get path to plugin folder."""
    clr.AddReference('ProtoGeometry')
    _loc = tuple(a.Location
                 for a in AppDomain.CurrentDomain.GetAssemblies()
                 if 'ProtoGeometry' in a.FullName)

    try:
        _ver = float(_loc[0].split('\\')[-2])
    except:
        _ver = float(_loc[0].split('\\')[-2].split(' ')[-1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = ('\\').join(_loc[0].split('\\')[-4:-1])
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'
    
    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        with open(settingsFile, 'rb') as outf:
            for line in outf:
                if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                    for l in outf:
                        if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                            break
                        else:
                            pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp

try:
    plugin, filename = IN
    p = tryGetPluginPath(plugin)
    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))
    # import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = "ERROR:\\n\\t{}".format(str(e)) + \\\n' + \
        '    "\\n\\nIf you think this is a bug submit an issue on github.\\n" + \\\n' + \
        '    "https://github.com/ladybug-analysis-tools/honeybee-plus/issues\\n" +  \\\n' + \
        '    "and include below error message:\\n\\n" + \\\n' + \
        '    "{}".format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = "ERROR:\n\t{}".format(str(e)) + \
        "\n\nIf you think this is a bug submit an issue on github.\n" + \
        "https://github.com/ladybug-analysis-tools/honeybee-plus/issues\n" +  \
        "and include below error message:\n\n" + \
        "{}".format(traceback.format_exc())
</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="d1b179dc-bf7d-4462-b43b-3b288a1766e2" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-266.611477886688" y="-155.857394226495" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;Ladybug&quot;;&#xA;&quot;sunlighthours_node.py&quot;;" ShouldFocus="false" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="347dce98-66dd-4fc8-92e7-cd8751c99829" start_index="0" end="f362ebd4-4806-405c-b0e0-c9aed4a8a71e" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="347dce98-66dd-4fc8-92e7-cd8751c99829" start_index="0" end="38665a06-ebfb-4bad-9728-4ab0f5fe8051" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="4e5e9c4c-c3ab-4727-824a-80d230637a6f" start_index="0" end="347dce98-66dd-4fc8-92e7-cd8751c99829" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="001199b2-6808-478f-ae43-adeb2dfeddf4" start_index="0" end="347dce98-66dd-4fc8-92e7-cd8751c99829" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d6119c54-5a23-4ebd-beab-b556e62c4d56" start_index="0" end="347dce98-66dd-4fc8-92e7-cd8751c99829" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="38665a06-ebfb-4bad-9728-4ab0f5fe8051" start_index="0" end="134c93e3-1c7e-4975-8f33-66227f47b17d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a3d3c45e-daaf-4a73-91b4-7f8a3dcff1b3" start_index="0" end="38665a06-ebfb-4bad-9728-4ab0f5fe8051" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a3d3c45e-daaf-4a73-91b4-7f8a3dcff1b3" start_index="0" end="347dce98-66dd-4fc8-92e7-cd8751c99829" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d1b179dc-bf7d-4462-b43b-3b288a1766e2" start_index="0" end="a3d3c45e-daaf-4a73-91b4-7f8a3dcff1b3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d1b179dc-bf7d-4462-b43b-3b288a1766e2" start_index="1" end="a3d3c45e-daaf-4a73-91b4-7f8a3dcff1b3" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="10294446-5c32-4af9-893a-def50422e3b3" annotationText="load the script" left="-276.611477886688" top="-185.857394226495" width="250" height="108" fontSize="14" InitialTop="-155.857394226495" InitialHeight="108" TextblockHeight="20" backgrouund="#FFC1D676">
      <Models ModelGuid="d1b179dc-bf7d-4462-b43b-3b288a1766e2" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>